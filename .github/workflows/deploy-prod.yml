# Deploy to GitHub Pages on Main Branch (Production Environment)
name: Deploy Production to GitHub Pages

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'PROCESS_DOCS.md'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-production"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container:
      image: node:18-bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Token to use for Pages setup
          token: ${{ secrets.GITHUB_TOKEN }}
          # Enable Pages if not already enabled
          enablement: true
      
      - name: Build for Production
        run: |
          npm run build -- --mode production --base /blocomanagersite/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job for Production
  deploy:
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye-slim
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4